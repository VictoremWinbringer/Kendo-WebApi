
<div id="myGrid">
    <h4>Users</h4>
    <div data-role="grid"
         data-selectable="row"
         data-editable="popup"
         data-toolbar="[{ name: 'create', text: 'Add' }]"
         data-columns="[{ field: 'Id', width: 270 , title:'#' },
          {  'field': 'UserName', 'title': 'Username'   },
          {  'field': 'DepartmentId', 'title': 'Department', template: '${Department}' , editor:categoryEditor  },
         { command:['edit', 'destroy']}]"
         data-bind="source: users ,
         events:{
         change:changed
         }"
         style="height: 500px"></div>
</div>
<script src="~/Kendo/js/jquery.min.js"></script>
<script src="~/Kendo/js/kendo.all.min.js"></script>
<script>

    var User = kendo.data.Model.define({
        id: "Id",
        fields: {
            Id: { editable: false, type: "number" },
            UserName: { validation: { required: true } },
            DepartmentId: { editable: true, type: "number" },
            Department:{type:'string'}
        }
    });

    var Dpmt = kendo.data.Model.define({
        id: "Id",
        fields: {
            Id: { editable: false, type: "number" },
            Title: { editable: false }
        }
    });

    var remoteDataSource = new kendo.data.DataSource({
        transport: {
            read: {
                url: "http://localhost:55918/api/users",
                dataType: "json"
            },
            create: {
                url: "http://localhost:55918/api/users",
                dataType: "json",
                type: "POST"
            },
            update: {
                url: function (options) {
                    console.log(options);
                    console.log(options.models);
                    console.log(options.model);
                    return "http://localhost:55918/api/users/" + options.Id;
                },
                dataType: "json",
                type: "PUT"
            },
            destroy: {
                url: function (options) {
                    return "http://localhost:55918/api/users/" + options.Id;
                },
                dataType: "json",
                type: "DELETE"
            }
        },
        schema: {
            model: User
        }
    });


    var remoteDataSource1 = new kendo.data.DataSource({
        transport: {
            read: {
                url: "http://localhost:55918/api/departments",
                dataType: "json"
            }
        },
        schema: {
            model: Dpmt
        }
    });


    var viewModel = kendo.observable({
        isVisible: true,
        users: remoteDataSource,
        departments: remoteDataSource1,
        changed: function (arg) {
            var selected = $.map(arg.sender.select(), function (item) {
                return $(item).text();
            });
            console.log(selected[0]);
        }        
    });

    var categoryEditor = function (container, options) {
        var input = $("<input/>");
        input.attr("name", options.field);
        input.appendTo(container);
        input.kendoDropDownList({
            dataSource: viewModel.departments,
            dataTextField: 'Title',
            dataValueField: 'Id'
        });
    };
    kendo.bind($("#myGrid"), viewModel);

</script>
